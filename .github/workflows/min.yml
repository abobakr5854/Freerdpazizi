name: Free RDP

on: workflow_dispatch

jobs:
  build:
    runs-on: windows-latest
    steps:
    - name: Download Ngrok
      run: |
        Invoke-WebRequest https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-windows-amd64.zip -OutFile ngrok.zip
        Expand-Archive ngrok.zip

    - name: Auth Ngrok
      run: .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

    - name: Enable RDP
      run: |
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty -Path "HKLM:\System\CurrentControlSet\Control\Terminal Server" -Name "fDenyTSConnections" -Value 0
        $Password = ConvertTo-SecureString "MyPassword123" -AsPlainText -Force
        Set-LocalUser -Name "runneradmin" -Password $Password

    - name: Start Ngrok Tunnel
      run: |
        Start-Process -FilePath .\ngrok\ngrok.exe -ArgumentList "tcp 3389" -NoNewWindow
        # تلاش برای گرفتن IP تونل
        $tcpUrl = $null
        for ($i=0; $i -lt 15; $i++) {
            try {
                $ngrokInfo = Invoke-RestMethod http://127.0.0.1:4040/api/tunnels
                $tcpUrl = $ngrokInfo.tunnels[0].public_url
                break
            } catch {
                Start-Sleep -Seconds 2
            }
        }
        if (-not $tcpUrl) {
            Write-Error "Ngrok tunnel could not be established!"
            exit 1
        }
        echo "NGROK_TCP_URL=$tcpUrl" >> $env:GITHUB_ENV

    - name: Show RDP Connection Info
      run: |
        Write-Host "======================================="
        Write-Host "Connect with:"
        Write-Host "Address: $env:NGROK_TCP_URL"
        Write-Host "Username: runneradmin"
        Write-Host "Password: MyPassword123"
        Write-Host "======================================="
        # نگه داشتن کانکشن تا وقتی جاب قطع بشه
        while ($true) { Start-Sleep -Seconds 300 }
